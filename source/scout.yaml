---
swagger: '2.0'
host: cloud.openalpr.com
securityDefinitions: {}
schemes:
  - https
produces:
  - application/json

info:
  title: Rekor Scout API
  version: v2.0.1
  description: |
    The Rekor Scout Web Server API allows you to search license plate data programmatically from the 
    OpenALPR Web server.  Using this API you can search for license plate groups, individual 
    reads, and alerts.  You can also retrieve the plate images from the agent.

tags:
  -
    name: webserver
    description: REST API for the Web Server and plate metadata
  -
    name: agent
    description: REST API for the agent and image data

paths:
  /api/search/plate:
    get:
      tags:
        - webserver
      description: Search for ALPR plate results
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
        - description: unique ID for the site
          in: query
          name: site
          required: false
          type: string
        - description: unique camera number
          in: query
          name: camera
          required: false
          type: number
        - description: Start time in ISO 8601 format. At least start or end must be defined.
          in: query
          name: start
          required: false
          type: string
        - description: End time in ISO 8601 format.  At least start or end must be defined.
          in: query
          name: end
          required: false
          type: string
        - description: Plate Number to search for
          in: query
          name: plate
          required: false
          type: string
        - description: Maximum number of results to return
          in: query
          name: topn
          required: false
          type: number
        - description: Order can be either desc or asc
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/plate'
        '400':
          description: "Bad input provided.  Adjust the query parameters and try again.\nThe text accompanying the error will provide more detail about which query \nparameters are incorrect.\n"
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
  /api/search/platecandidate:
    get:
      tags:
        - webserver
      description: Search among all possible candidate plate numbers
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
        - description: unique ID for the site
          in: query
          name: site
          required: false
          type: string
        - description: unique camera number
          in: query
          name: camera
          required: false
          type: number
        - description: Start time in ISO 8601 format. At least start or end must be defined.
          in: query
          name: start
          required: false
          type: string
        - description: End time in ISO 8601 format.  At least start or end must be defined.
          in: query
          name: end
          required: false
          type: string
        - description: Plate Number to search for
          in: query
          name: plate
          required: false
          type: string
        - description: Maximum number of results to return
          in: query
          name: topn
          required: false
          type: number
        - description: Order can be either desc or asc
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/platecandidate'
        '400':
          description: "Bad input provided.  Adjust the query parameters and try again.\nThe text accompanying the error will provide more detail about which query \nparameters are incorrect.\n"
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"

  /api/search/alert:
    get:
      tags:
        - webserver
      description: Search for ALPR plate results
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
        - description: unique ID for the site
          in: query
          name: site
          required: false
          type: string
        - description: unique camera number
          in: query
          name: camera
          required: false
          type: number
        - description: Start time in ISO 8601 format. At least start or end must be defined.
          in: query
          name: start
          required: false
          type: string
        - description: End time in ISO 8601 format.  At least start or end must be defined.
          in: query
          name: end
          required: false
          type: string
        - description: Plate Number to search for
          in: query
          name: plate
          required: false
          type: string
        - description: Maximum number of results to return
          in: query
          name: topn
          required: false
          type: number
        - description: Order can be either desc or asc
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/alert'
        '400':
          description: "Bad input provided.  Adjust the query parameters and try again.\nThe text accompanying the error will provide more detail about which query \nparameters are incorrect.\n"
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
  '/api/detail/platecandidate/{group_id}':
    get:
      tags:
        - webserver
      description: Get detailed results for a plate record from a plate candidate
      parameters:
        - in: path
          name: group_id
          required: true
          type: string
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/plate'
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
        '404':
          description: |
            The requested ID was not found


  '/api/agents/':
    get:
      tags:
        - webserver
      description: List the agents registered with the webserver
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
        '404':
          description: |
            The requested ID was not found

  '/api/cameras/':
    get:
      tags:
        - webserver
      description: List the cameras registered with the webserver
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
        '404':
          description: |
            The requested ID was not found


  '/api/alert-lists/':
    get:
      tags:
        - webserver
      description: List the alert lists that are configured
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
        '404':
          description: |
            The requested ID was not found
            
  '/api/users/':
    get:
      tags:
        - webserver
      description: List the users that are associated with this account
      parameters:
        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: "Unauthorized.  You must either provide a valid api_key or \nhave a logged in session\n"
        '404':
          description: |
            The requested ID was not found
            
  '/img/{agent_uid}/{image_uuid}':
    get:
      tags:
        - webserver
      description: Get an image for the requested agent and UUID.  This will proxy the request to the remote agent.
      parameters:
        - in: path
          name: agent_uid
          required: true
          type: string
        - in: path
          name: image_uuid
          required: true
          type: string

        - description: API Key used for authentication.  This can be generated for each user by going to /account/my_account on the webserver
          in: query
          name: api_key
          required: true
          type: string
        - description: X coordinate for cropping.
          in: query
          name: x
          required: false
          type: string
        - description: y coordinate for cropping.
          in: query
          name: y
          required: false
          type: string
        - description: width coordinate for cropping.
          in: query
          name: width
          required: false
          type: string
        - description: height coordinate for cropping.
          in: query
          name: height
          required: false
          type: string
        - description: Resizes the image on the agent to a maximum width (in pixels) before transmitting
          in: query
          name: max_width
          required: false
          type: string
      produces:
        - image/jpeg
      responses:
        '200':
          description: OK
        '404':
          description: not found


  '/img/{image_uuid}.jpg':
    get:
      tags:
        - agent
      description: |
        Get an image for the requested plate.  This web service is served locally on the agent on port 8355.
        By default the local agent webservice is disabled, so you must first enable it in alprd.conf
      parameters:
        - in: path
          name: image_uuid
          required: true
          type: string

        - description: X coordinate for cropping.
          in: query
          name: x
          required: false
          type: string
        - description: y coordinate for cropping.
          in: query
          name: y
          required: false
          type: string
        - description: width coordinate for cropping.
          in: query
          name: width
          required: false
          type: string
        - description: height coordinate for cropping.
          in: query
          name: height
          required: false
          type: string
        - description: Resizes the image on the agent to a maximum size before transmitting
          in: query
          name: max_width
          required: false
          type: string
      produces:
        - image/jpeg
      responses:
        '200':
          description: OK
        '404':
          description: not found

definitions:
  platecandidate:
    type: object
    properties:
      pk:
        type: integer
        description: "Unique integer ID for this plate"
      model:
        type: string
        description: "Name of the data type"
      fields:
        type: object
        properties:
          agent_uid:
            type: string
            description: "Agent identifier for the agent"
        
          confidence:
            type: number
            description: "Percent confidence of the license plate result"
          group:
            type: integer
            description: "Reference to the best plate read for this candidate"
            
          plate_number:
            type: string
            description: "The plate number for this candidate"
          uuid:
            type: string
            description: "Unique identifier for the image where the license plate was found"
          epoch_time:
            type: string
            description: "Time that the plate was seen in ISO-8601 format"
          camera:
            type: integer
            description: "Unique ID of the camera"
          camera_id:
            type: integer
            description: "Unique ID of the camera"
          company:
            type: integer
            description: "Company ID"
          site:
            type: string
            description: "Site ID where the plate was captured"
          site_id:
            type: integer
            description: "Unique ID of the site"
          plate_index:
            type: integer
            description: "Within a single image (UUID) there may be multiple plates.  This is the unique ID of the single plate within an image"


  plate:
    type: object
    properties:
      pk:
        type: integer
        description: "Unique integer ID for this plate"
      model:
        type: string
        description: "Name of the data type"
      fields:
        type: object
        properties:
          agent_uid:
            type: string
            description: "Agent identifier for the agent"
          best_confidence:
            type: number
            description: "Percent confidence of the license plate result"
          best_plate:
            type: string
            description: "The plate number with the highest confidence"
          best_index:
            type: integer
            description: "Within a single image (UUID) there may be multiple plates.  This is the unique ID of the single plate within an image"
          best_uuid:
            type: string
            description: "Unique identifier for the image where the highest confidence license plate was found"
          epoch_time_start:
            type: string
            description: "Time that the plate was initially seen in ISO-8601 format"
          epoch_time_end:
            type: string
            description: "Time that the plate was last seen in ISO-8601 format"
          camera:
            type: integer
            description: "Unique ID of the camera"
          camera_id:
            type: integer
            description: "Unique ID of the camera"
          company:
            type: integer
            description: "Company ID"
          site:
            type: string
            description: "Site ID where the plate was captured"
          site_id:
            type: integer
            description: "Unique ID of the site"
          img_width:
            type: integer
            description: "Image width in pixels"
          img_height:
            type: integer
            description: "Image height in pixels"
            
          plate_x1:
            type: number
            description: "X coordinate for the top-left of the license plate"
          plate_y1:
            type: number
            description: "X coordinate for the top-left of the license plate"
          plate_x2:
            type: number
            description: "X coordinate for the top-right of the license plate"
          plate_y2:
            type: number
            description: "X coordinate for the top-right of the license plate"
          plate_x3:
            type: number
            description: "X coordinate for the bottom-right of the license plate"
          plate_y3:
            type: number
            description: "X coordinate for the bottom-right of the license plate"
          plate_x4:
            type: number
            description: "X coordinate for the bottom-left of the license plate"
          plate_y4:
            type: number
            description: "X coordinate for the bottom-left of the license plate"
            
          processing_time_ms:
            type: number
            description: "Time in milliseconds taken to identify the license plate from an image"
                

  alert:
    type: object
    properties:
      pk:
        type: integer
        description: "Unique integer ID for this alert"
      model:
        type: string
        description: "Name of the data type"
      fields:
        type: object
        properties:
          agent_uid:
            type: string
            description: "Agent identifier for the agent"
          confidence:
            type: number
            description: "Percent confidence of the license plate result"
          plate_group:
            type: integer
            description: "Reference to the best plate read for this candidate"
            
          plate_number:
            type: string
            description: "The plate number for this candidate"

          description:
            type: string
            description: "The description for this alert entry"
            
          epoch_time:
            type: string
            description: "Time that the plate was seen in ISO-8601 format"
          alert_group_name:
            type: integer
            description: "Unique name of the alert list"
          alert_group:
            type: integer
            description: "Unique ID of the alert list"
          company:
            type: integer
            description: "Company ID"
          site:
            type: string
            description: "Site ID where the plate was captured"
          site_id:
            type: integer
            description: "Unique ID of the site"


